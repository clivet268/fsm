#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.2 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 61 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1           0 7207 0 28 3 12 #"#lang racket"
0 0 24 29 1 #"\n"
0 0 17 3 39 #"#| *** FSM Graphical User Interface ***"
0 0 17 29 1 #"\n"
0 0 17 3 114
(
 #"    Developed by: Marco T. Morazan, Joshua Schappel, and Sachin Maha"
 #"shabde in 2019. (names in no particular order)"
) 0 0 17 29 1 #"\n"
0 0 17 3 118
(
 #"    Goal: Build a GUI for the fsm library in order to help students "
 #"be able to visualize the machines that the library"
) 0 0 17 29 1 #"\n"
0 0 17 3 25 #"            has to offer."
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 24 3 1 #" "
0 0 14 3 14 #"2htdp/universe"
0 0 24 3 1 #" "
0 0 19 3 17 #"\"../fsm-main.rkt\""
0 0 24 3 1 #" "
0 0 19 3 18 #"\"inputFactory.rkt\""
0 0 24 3 1 #" "
0 0 19 3 25 #"\"./structs/msgWindow.rkt\""
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 22 #"\"./structs/button.rkt\""
0 0 24 3 1 #" "
0 0 19 3 20 #"\"./structs/posn.rkt\""
0 0 24 3 1 #" "
0 0 19 3 21 #"\"./structs/state.rkt\""
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 21 #"\"./structs/input.rkt\""
0 0 24 3 1 #" "
0 0 19 3 23 #"\"./structs/machine.rkt\""
0 0 24 3 1 #" "
0 0 19 3 21 #"\"./structs/world.rkt\""
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 21 #"\"./structs/world.rkt\""
0 0 24 3 1 #" "
0 0 19 3 30 #"\"./components/inputFields.rkt\""
0 0 24 3 1 #" "
0 0 19 3 13 #"\"globals.rkt\""
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 26 #"\"./components/buttons.rkt\""
0 0 24 3 1 #" "
0 0 19 3 35 #"\"./components/stateTransitions.rkt\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"provide"
0 0 24 3 1 #" "
0 0 14 3 9 #"visualize"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; GLOBAL VALIRABLES"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"TOP"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"BOTTOM"
0 0 24 3 1 #"("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"MAIN-SCENE"
0 0 24 3 2 #" ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"white\""
0 0 24 3 3 #")) "
0 0 17 3 27 #";; Create the initial scene"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; CIRCLE VARIABLES"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"X0"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 3 #")) "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"Y0"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 3 #"TOP"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 14 3 6 #"BOTTOM"
0 0 24 3 3 #")) "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"R"
0 0 24 3 1 #" "
0 0 21 3 3 #"175"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"inner-R"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"R"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"CENTER-CIRCLE"
0 0 24 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 14 3 23 #"CONTROLLER-BUTTON-COLOR"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"TRUE-INV"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-color"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 3 #"171"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #")) "
0 0 17 3 29 #";; Color for passed invarient"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"FALSE-INV"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-color"
0 0 24 3 1 #" "
0 0 21 3 3 #"245"
0 0 24 3 1 #" "
0 0 21 3 2 #"35"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #")) "
0 0 17 3 29 #";; Color for failed invarient"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#|"
0 0 17 29 1 #"\n"
0 0 17 3 23 #"-----------------------"
0 0 17 29 1 #"\n"
0 0 17 3 16 #"Initialize World"
0 0 17 29 1 #"\n"
0 0 17 3 23 #"-----------------------"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";; build-world: machine type msgWindow(optional) -> world"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";; Purpose: Creates the initail world with the given machine"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"build-world"
0 0 24 3 1 #" "
0 0 14 3 1 #"m"
0 0 24 3 1 #" "
0 0 14 3 4 #"type"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 14 3 3 #"msg"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"letrec"
0 0 24 3 2 #" ("
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 10 #"messageWin"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 3 #"msg"
0 0 24 3 2 #") "
0 0 17 3 60
#";; Determine if a message should be rendered duing on create"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                           "
0 0 14 3 4 #"null"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 3 #"msg"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 53 #";; determine-input-list: none -> list-of-input-fields"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 45 #";; Purpose: Determins which input list to use"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 20 #"determine-input-list"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 15 3 4 #"case"
0 0 24 3 1 #" "
0 0 14 3 4 #"type"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                     [("
0 0 14 3 3 #"pda"
0 0 24 3 2 #") "
0 0 14 3 14 #"INPUT-LIST-PDA"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 10 #"INPUT-LIST"
0 0 24 3 4 #"])))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 49 #";; determine-button-list: none -> list-of-buttons"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 46 #";; Purpose: Determins which button list to use"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 21 #"determine-button-list"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 15 3 4 #"case"
0 0 24 3 1 #" "
0 0 14 3 4 #"type"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                      [("
0 0 14 3 3 #"pda"
0 0 24 3 2 #") "
0 0 14 3 15 #"BUTTON-LIST-PDA"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 11 #"BUTTON-LIST"
0 0 24 3 5 #"]))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 16 #"initialize-world"
0 0 24 3 1 #" "
0 0 14 3 1 #"m"
0 0 24 3 1 #" "
0 0 14 3 10 #"messageWin"
0 0 24 3 2 #" ("
0 0 14 3 21 #"determine-button-list"
0 0 24 3 3 #") ("
0 0 14 3 20 #"determine-input-list"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#|"
0 0 17 29 1 #"\n"
0 0 17 3 23 #"-----------------------"
0 0 17 29 1 #"\n"
0 0 17 3 13 #"Cmd Functions"
0 0 17 29 1 #"\n"
0 0 17 3 11 #"-----------"
0 0 17 3 12 #"------------"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; visualize: fsm-machine -> world"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; Purpose: allows a user to pre-load a machine"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"visualize"
0 0 24 3 1 #" "
0 0 14 3 11 #"fsm-machine"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"letrec"
0 0 24 3 3 #" (("
0 0 14 3 11 #"run-program"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 15 3 8 #"big-bang"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                              "
0 0 14 3 1 #"w"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 4 #"name"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 14 #"symbol->string"
0 0 24 3 2 #" ("
0 0 14 3 12 #"machine-type"
0 0 24 3 2 #" ("
0 0 14 3 17 #"world-fsm-machine"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                   "
0 0 19 3 4 #"\": \""
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                   "
0 0 14 3 7 #"VERSION"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 7 #"on-draw"
0 0 24 3 1 #" "
0 0 14 3 10 #"draw-world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 8 #"on-mouse"
0 0 24 3 1 #" "
0 0 14 3 19 #"process-mouse-event"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 6 #"on-key"
0 0 24 3 1 #" "
0 0 14 3 11 #"process-key"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 55 #";; check if it is a pre-made machine or a brand new one"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 7 #"symbol?"
0 0 24 3 1 #" "
0 0 14 3 11 #"fsm-machine"
0 0 24 3 2 #") "
0 0 17 3 20 #";; Brand new machine"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 4 #"case"
0 0 24 3 1 #" "
0 0 14 3 11 #"fsm-machine"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 3 #"dfa"
0 0 24 3 3 #") ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 16 #"set-machine-type"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"dfa"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 11 #"run-program"
0 0 24 3 2 #" ("
0 0 14 3 11 #"build-world"
0 0 24 3 2 #" ("
0 0 14 3 7 #"machine"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 14 3 4 #"null"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 14 3 3 #"dfa"
0 0 24 3 3 #" ) "
0 0 21 3 1 #"'"
0 0 14 3 3 #"dfa"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 4 #"void"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 4 #"ndfa"
0 0 24 3 3 #") ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 16 #"set-machine-type"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"ndfa"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 11 #"run-program"
0 0 24 3 2 #" ("
0 0 14 3 11 #"build-world"
0 0 24 3 2 #" ("
0 0 14 3 7 #"machine"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 14 3 4 #"null"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 14 3 4 #"ndfa"
0 0 24 3 3 #" ) "
0 0 21 3 1 #"'"
0 0 14 3 4 #"ndfa"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 4 #"void"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 3 #"pda"
0 0 24 3 3 #") ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 16 #"set-machine-type"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"pda"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 11 #"run-program"
0 0 24 3 2 #" ("
0 0 14 3 11 #"build-world"
0 0 24 3 2 #" ("
0 0 14 3 11 #"pda-machine"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 14 3 4 #"null"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 14 3 3 #"pda"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 1 #"'"
0 0 14 3 3 #"pda"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 4 #"void"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 2 #"tm"
0 0 24 3 3 #") ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 7 #"println"
0 0 24 3 1 #" "
0 0 19 3 25 #"\"TODO ADD Turing Machine\""
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 5 #"error"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 32 #"\"~s is not a valid machine type\""
0 0 24 3 1 #" "
0 0 14 3 11 #"fsm-machine"
0 0 24 3 5 #"))])]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 38 #";; --- Pre-made with no predicates ---"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 4 #"case"
0 0 24 3 2 #" ("
0 0 14 3 7 #"sm-type"
0 0 24 3 1 #" "
0 0 14 3 11 #"fsm-machine"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 3 #"dfa"
0 0 24 3 3 #") ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 16 #"set-machine-type"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"dfa"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 11 #"run-program"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 11 #"build-world"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 7 #"machine"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 9 #"fsm-state"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 13 #"TRUE-FUNCTION"
0 0 24 3 2 #" ("
0 0 14 3 4 #"posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 5 #"))) ("
0 0 14 3 12 #"sm-getstates"
0 0 24 3 1 #" "
0 0 14 3 11 #"fsm-machine"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 11 #"sm-getstart"
0 0 24 3 1 #" "
0 0 14 3 11 #"fsm-machine"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 12 #"sm-getfinals"
0 0 24 3 1 #" "
0 0 14 3 11 #"fsm-machine"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 7 #"reverse"
0 0 24 3 2 #" ("
0 0 14 3 11 #"sm-getrules"
0 0 24 3 1 #" "
0 0 14 3 11 #"fsm-machine"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 21 3 1 #"'"
0 0 24 3 4 #"() ("
0 0 14 3 14 #"sm-getalphabet"
0 0 24 3 1 #" "
0 0 14 3 11 #"fsm-machine"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 7 #"sm-type"
0 0 24 3 1 #" "
0 0 14 3 11 #"fsm-machine"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 7 #"sm-type"
0 0 24 3 1 #" "
0 0 14 3 11 #"fsm-machine"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 9 #"msgWindow"
0 0 24 3 1 #" "
0 0 19 3 129
(
 #"\"The pre-made machine was added to the program. Please add variable"
 #"s to the Tape Input and then press 'Run' to start simulation.\""
) 0 0 24 3 1 #" "
0 0 19 3 5 #"\"dfa\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")) "
0 0 14 3 11 #"MSG-SUCCESS"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 4 #"void"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 4 #"ndfa"
0 0 24 3 3 #") ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 16 #"set-machine-type"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"ndfa"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 11 #"run-program"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 11 #"build-world"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 7 #"machine"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 9 #"fsm-state"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 13 #"TRUE-FUNCTION"
0 0 24 3 2 #" ("
0 0 14 3 4 #"posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 5 #"))) ("
0 0 14 3 12 #"sm-getstates"
0 0 24 3 1 #" "
0 0 14 3 11 #"fsm-machine"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 11 #"sm-getstart"
0 0 24 3 1 #" "
0 0 14 3 11 #"fsm-machine"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 12 #"sm-getfinals"
0 0 24 3 1 #" "
0 0 14 3 11 #"fsm-machine"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 7 #"reverse"
0 0 24 3 2 #" ("
0 0 14 3 11 #"sm-getrules"
0 0 24 3 1 #" "
0 0 14 3 11 #"fsm-machine"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                              "
0 0 21 3 1 #"'"
0 0 24 3 4 #"() ("
0 0 14 3 14 #"sm-getalphabet"
0 0 24 3 1 #" "
0 0 14 3 11 #"fsm-machine"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 7 #"sm-type"
0 0 24 3 1 #" "
0 0 14 3 11 #"fsm-machine"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 7 #"sm-type"
0 0 24 3 1 #" "
0 0 14 3 11 #"fsm-machine"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 9 #"msgWindow"
0 0 24 3 1 #" "
0 0 19 3 129
(
 #"\"The pre-made machine was added to the program. Please add variable"
 #"s to the Tape Input and then press 'Run' to start simulation.\""
) 0 0 24 3 1 #" "
0 0 19 3 6 #"\"ndfa\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")) "
0 0 14 3 11 #"MSG-SUCCESS"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 4 #"void"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 3 #"pda"
0 0 24 3 3 #") ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 16 #"set-machine-type"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"pda"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 11 #"run-program"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 11 #"build-world"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 11 #"pda-machine"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 9 #"fsm-state"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 17 #"PDA-TRUE-FUNCTION"
0 0 24 3 2 #" ("
0 0 14 3 4 #"posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 5 #"))) ("
0 0 14 3 12 #"sm-getstates"
0 0 24 3 1 #" "
0 0 14 3 11 #"fsm-machine"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 11 #"sm-getstart"
0 0 24 3 1 #" "
0 0 14 3 11 #"fsm-machine"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 12 #"sm-getfinals"
0 0 24 3 1 #" "
0 0 14 3 11 #"fsm-machine"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 7 #"reverse"
0 0 24 3 2 #" ("
0 0 14 3 11 #"sm-getrules"
0 0 24 3 1 #" "
0 0 14 3 11 #"fsm-machine"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 21 3 1 #"'"
0 0 24 3 4 #"() ("
0 0 14 3 14 #"sm-getalphabet"
0 0 24 3 1 #" "
0 0 14 3 11 #"fsm-machine"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 7 #"sm-type"
0 0 24 3 1 #" "
0 0 14 3 11 #"fsm-machine"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 19 #"sm-getstackalphabet"
0 0 24 3 1 #" "
0 0 14 3 11 #"fsm-machine"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 7 #"sm-type"
0 0 24 3 1 #" "
0 0 14 3 11 #"fsm-machine"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 9 #"msgWindow"
0 0 24 3 1 #" "
0 0 19 3 129
(
 #"\"The pre-made machine was added to the program. Please add variable"
 #"s to the Tape Input and then press 'Run' to start simulation.\""
) 0 0 24 3 1 #" "
0 0 19 3 5 #"\"pda\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")) "
0 0 14 3 11 #"MSG-SUCCESS"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 4 #"void"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 2 #"tm"
0 0 24 3 3 #") ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 7 #"println"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"TODO ADD tm\""
0 0 24 3 5 #"))])]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 48 #";; --- Pre-made with predicates (invariants) ---"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 6 #"letrec"
0 0 24 3 3 #" (("
0 0 14 3 10 #"state-list"
0 0 24 3 2 #" ("
0 0 14 3 12 #"sm-getstates"
0 0 24 3 1 #" "
0 0 14 3 11 #"fsm-machine"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 17 3 51 #";; get-member symbol list-of-procedure -> procedure"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 17 3 61
#";; Purpose: determins if the given symbol is in the procedure"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"get-member"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"()]"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                [("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"caar"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 2 #") "
0 0 14 3 1 #"s"
0 0 24 3 3 #") ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 10 #"get-member"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 7 #"))]))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 4 #"case"
0 0 24 3 2 #" ("
0 0 14 3 7 #"sm-type"
0 0 24 3 1 #" "
0 0 14 3 11 #"fsm-machine"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"           [("
0 0 14 3 3 #"dfa"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 16 #"set-machine-type"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"dfa"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 11 #"run-program"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 11 #"build-world"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"machine"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 4 #"temp"
0 0 24 3 2 #" ("
0 0 14 3 10 #"get-member"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 4 #"temp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 14 3 9 #"fsm-state"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 13 #"TRUE-FUNCTION"
0 0 24 3 2 #" ("
0 0 14 3 4 #"posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 14 3 9 #"fsm-state"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 4 #"temp"
0 0 24 3 3 #") ("
0 0 14 3 4 #"posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 6 #"))))) "
0 0 14 3 10 #"state-list"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 11 #"sm-getstart"
0 0 24 3 1 #" "
0 0 14 3 11 #"fsm-machine"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 12 #"sm-getfinals"
0 0 24 3 1 #" "
0 0 14 3 11 #"fsm-machine"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 7 #"reverse"
0 0 24 3 2 #" ("
0 0 14 3 11 #"sm-getrules"
0 0 24 3 1 #" "
0 0 14 3 11 #"fsm-machine"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 21 3 1 #"'"
0 0 24 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 14 #"sm-getalphabet"
0 0 24 3 1 #" "
0 0 14 3 11 #"fsm-machine"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 7 #"sm-type"
0 0 24 3 1 #" "
0 0 14 3 11 #"fsm-machine"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"sm-type"
0 0 24 3 1 #" "
0 0 14 3 11 #"fsm-machine"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 9 #"msgWindow"
0 0 24 3 1 #" "
0 0 19 3 129
(
 #"\"The pre-made machine was added to the program. Please add variable"
 #"s to the Tape Input and then press 'Run' to start simulation.\""
) 0 0 24 3 1 #" "
0 0 19 3 5 #"\"dfa\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")) "
0 0 14 3 11 #"MSG-SUCCESS"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"void"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 24 29 1 #"\n"
0 0 24 3 13 #"           [("
0 0 14 3 3 #"pda"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 16 #"set-machine-type"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"pda"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 11 #"run-program"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 11 #"build-world"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 11 #"pda-machine"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 4 #"temp"
0 0 24 3 2 #" ("
0 0 14 3 10 #"get-member"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 4 #"temp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 9 #"fsm-state"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 17 #"PDA-TRUE-FUNCTION"
0 0 24 3 2 #" ("
0 0 14 3 4 #"posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 9 #"fsm-state"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 4 #"temp"
0 0 24 3 3 #") ("
0 0 14 3 4 #"posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 6 #"))))) "
0 0 14 3 10 #"state-list"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 11 #"sm-getstart"
0 0 24 3 1 #" "
0 0 14 3 11 #"fsm-machine"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 12 #"sm-getfinals"
0 0 24 3 1 #" "
0 0 14 3 11 #"fsm-machine"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 7 #"reverse"
0 0 24 3 2 #" ("
0 0 14 3 11 #"sm-getrules"
0 0 24 3 1 #" "
0 0 14 3 11 #"fsm-machine"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 21 3 1 #"'"
0 0 24 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 14 #"sm-getalphabet"
0 0 24 3 1 #" "
0 0 14 3 11 #"fsm-machine"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 7 #"sm-type"
0 0 24 3 1 #" "
0 0 14 3 11 #"fsm-machine"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 19 #"sm-getstackalphabet"
0 0 24 3 1 #" "
0 0 14 3 11 #"fsm-machine"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"sm-type"
0 0 24 3 1 #" "
0 0 14 3 11 #"fsm-machine"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 9 #"msgWindow"
0 0 24 3 1 #" "
0 0 19 3 129
(
 #"\"The pre-made machine was added to the program. Please add variable"
 #"s to the Tape Input and then press 'Run' to start simulation.\""
) 0 0 24 3 1 #" "
0 0 19 3 5 #"\"dfa\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")) "
0 0 14 3 11 #"MSG-SUCCESS"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"void"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 24 29 1 #"\n"
0 0 24 3 13 #"           [("
0 0 14 3 2 #"tm"
0 0 24 3 3 #") ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 7 #"println"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"TODO\""
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 24 29 1 #"\n"
0 0 24 3 13 #"           [("
0 0 14 3 4 #"ndfa"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 16 #"set-machine-type"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"ndfa"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 11 #"run-program"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 11 #"build-world"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"machine"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 4 #"temp"
0 0 24 3 2 #" ("
0 0 14 3 10 #"get-member"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 4 #"temp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 14 3 9 #"fsm-state"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 13 #"TRUE-FUNCTION"
0 0 24 3 2 #" ("
0 0 14 3 4 #"posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 14 3 9 #"fsm-state"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 4 #"temp"
0 0 24 3 3 #") ("
0 0 14 3 4 #"posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 6 #"))))) "
0 0 14 3 10 #"state-list"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 11 #"sm-getstart"
0 0 24 3 1 #" "
0 0 14 3 11 #"fsm-machine"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 12 #"sm-getfinals"
0 0 24 3 1 #" "
0 0 14 3 11 #"fsm-machine"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 7 #"reverse"
0 0 24 3 2 #" ("
0 0 14 3 11 #"sm-getrules"
0 0 24 3 1 #" "
0 0 14 3 11 #"fsm-machine"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 21 3 1 #"'"
0 0 24 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 14 #"sm-getalphabet"
0 0 24 3 1 #" "
0 0 14 3 11 #"fsm-machine"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 7 #"sm-type"
0 0 24 3 1 #" "
0 0 14 3 11 #"fsm-machine"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"sm-type"
0 0 24 3 1 #" "
0 0 14 3 11 #"fsm-machine"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 9 #"msgWindow"
0 0 24 3 1 #" "
0 0 19 3 129
(
 #"\"The pre-made machine was added to the program. Please add variable"
 #"s to the Tape Input and then press 'Run' to start simulation.\""
) 0 0 24 3 1 #" "
0 0 19 3 5 #"\"dfa\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")) "
0 0 14 3 11 #"MSG-SUCCESS"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"void"
0 0 24 3 9 #"))]))])))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#|"
0 0 17 29 1 #"\n"
0 0 17 3 23 #"-----------------------"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"Scene Rendering"
0 0 17 29 1 #"\n"
0 0 17 3 23 #"-----------------------"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; draw-main-img: world scene -> scene"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; Purpose: Draws the main GUI image"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"draw-main-img"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"letrec"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"      (          "
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 9 #"deg-shift"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 18 #"machine-state-list"
0 0 24 3 2 #" ("
0 0 14 3 17 #"world-fsm-machine"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                      "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 3 #"360"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 2 #" ("
0 0 14 3 18 #"machine-state-list"
0 0 24 3 2 #" ("
0 0 14 3 17 #"world-fsm-machine"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 10 #"state-list"
0 0 24 3 2 #" ("
0 0 14 3 18 #"machine-state-list"
0 0 24 3 2 #" ("
0 0 14 3 17 #"world-fsm-machine"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #"))) "
0 0 17 3 34 #";; The list of states in the world"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 5 #"get-x"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 5 #"theta"
0 0 24 3 1 #" "
0 0 14 3 3 #"rad"
0 0 24 3 3 #") ("
0 0 14 3 8 #"truncate"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 3 #"rad"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cos"
0 0 24 3 2 #" ("
0 0 14 3 16 #"degrees->radians"
0 0 24 3 1 #" "
0 0 14 3 5 #"theta"
0 0 24 3 4 #"))) "
0 0 14 3 2 #"X0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 5 #"get-y"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 5 #"theta"
0 0 24 3 1 #" "
0 0 14 3 3 #"rad"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 8 #"truncate"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 3 #"rad"
0 0 24 3 2 #" ("
0 0 14 3 3 #"sin"
0 0 24 3 2 #" ("
0 0 14 3 16 #"degrees->radians"
0 0 24 3 1 #" "
0 0 14 3 5 #"theta"
0 0 24 3 4 #"))) "
0 0 14 3 2 #"Y0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 13 #"current-index"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 2 #" ("
0 0 14 3 15 #"world-cur-state"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 8 #"index-of"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 14 #"fsm-state-name"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 4 #")) ("
0 0 14 3 18 #"machine-state-list"
0 0 24 3 2 #" ("
0 0 14 3 17 #"world-fsm-machine"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 15 #"world-cur-state"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 5 #"tip-x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"get-x"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 9 #"deg-shift"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-index"
0 0 24 3 2 #") "
0 0 14 3 7 #"inner-R"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 5 #"tip-y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"get-y"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 9 #"deg-shift"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-index"
0 0 24 3 2 #") "
0 0 14 3 7 #"inner-R"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 9 #"the-arrow"
0 0 24 3 1 #"("
0 0 14 3 6 #"rotate"
0 0 24 3 1 #" "
0 0 21 3 3 #"180"
0 0 24 3 2 #" ("
0 0 14 3 8 #"triangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"tan\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 14 #"find-state-pos"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 2 #"\316\273"
0 0 24 3 1 #"("
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 4 #"void"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 19 #"set-fsm-state-posn!"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 4 #"posn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"get-x"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 9 #"deg-shift"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 14 3 1 #"R"
0 0 24 3 3 #") ("
0 0 14 3 5 #"get-y"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 9 #"deg-shift"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 14 3 1 #"R"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 14 #"find-state-pos"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 17 3 50 #";; determin-inv: procedure processed-list -> color"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 17 3 66
#";; Purpose: Determins the color of the state based on the invarent"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 12 #"determin-inv"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 6 #"p-list"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 15 3 4 #"case"
0 0 24 3 1 #" "
0 0 14 3 12 #"MACHINE-TYPE"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                         [("
0 0 14 3 3 #"pda"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                            [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 2 #" ("
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 6 #"p-list"
0 0 24 3 1 #" "
0 0 14 3 10 #"STACK-LIST"
0 0 24 3 3 #")) "
0 0 14 3 8 #"TRUE-INV"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                            [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #" ("
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 6 #"p-list"
0 0 24 3 1 #" "
0 0 14 3 10 #"STACK-LIST"
0 0 24 3 3 #")) "
0 0 14 3 9 #"FALSE-INV"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 3 #"])]"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                         [("
0 0 14 3 2 #"tm"
0 0 24 3 3 #") ("
0 0 14 3 7 #"println"
0 0 24 3 1 #" "
0 0 19 3 29 #"\"TODO: Add invariant checker\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                            [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 2 #" ("
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 6 #"p-list"
0 0 24 3 3 #")) "
0 0 14 3 8 #"TRUE-INV"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                            [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #" ("
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 6 #"p-list"
0 0 24 3 3 #")) "
0 0 14 3 9 #"FALSE-INV"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 6 #"])])))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 17 3 50 #";;draw-states: list-of-states index scene -> scene"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 17 3 41 #";; Purpose: Draws the states onto the GUI"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 11 #"draw-states"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 14 #"find-state-pos"
0 0 24 3 2 #" ("
0 0 14 3 18 #"machine-state-list"
0 0 24 3 2 #" ("
0 0 14 3 17 #"world-fsm-machine"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")) "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 15 3 4 #"cond"
0 0 24 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 14 3 1 #"s"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                             [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"fsm-state-name"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 4 #")) ("
0 0 14 3 19 #"machine-start-state"
0 0 24 3 2 #" ("
0 0 14 3 17 #"world-fsm-machine"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 5 #"ormap"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"fsm-state-name"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #")) "
0 0 14 3 1 #"x"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 24 #"machine-final-state-list"
0 0 24 3 2 #" ("
0 0 14 3 17 #"world-fsm-machine"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 24 3 18 #"                  "
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #"("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 14 #"symbol->string"
0 0 24 3 2 #" ("
0 0 14 3 14 #"fsm-state-name"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 4 #"))) "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 52 #"                                                   ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"21"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 14 3 17 #"START-STATE-COLOR"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 52 #"                                                   ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 14 3 15 #"END-STATE-COLOR"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 52 #"                                                   ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 14 3 15 #"END-STATE-COLOR"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 14 #"fsm-state-posn"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 14 #"fsm-state-posn"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 11 #"draw-states"
0 0 24 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 14 3 1 #"s"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                             [("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"fsm-state-name"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 4 #")) ("
0 0 14 3 19 #"machine-start-state"
0 0 24 3 2 #" ("
0 0 14 3 17 #"world-fsm-machine"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #"("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 14 #"symbol->string"
0 0 24 3 2 #" ("
0 0 14 3 14 #"fsm-state-name"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 4 #"))) "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 52 #"                                                   ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 14 3 17 #"START-STATE-COLOR"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 14 #"fsm-state-posn"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 14 #"fsm-state-posn"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 11 #"draw-states"
0 0 24 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 14 3 1 #"s"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                             [("
0 0 14 3 5 #"ormap"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"fsm-state-name"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #")) "
0 0 14 3 1 #"x"
0 0 24 3 4 #")) ("
0 0 14 3 24 #"machine-final-state-list"
0 0 24 3 2 #" ("
0 0 14 3 17 #"world-fsm-machine"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 14 #"symbol->string"
0 0 24 3 2 #" ("
0 0 14 3 14 #"fsm-state-name"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 4 #"))) "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                    ("
0 0 14 3 7 #"overlay"
0 0 24 29 1 #"\n"
0 0 24 3 54 #"                                                     ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 14 3 15 #"END-STATE-COLOR"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 54 #"                                                     ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 14 3 15 #"END-STATE-COLOR"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 14 #"fsm-state-posn"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 14 #"fsm-state-posn"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 11 #"draw-states"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 14 3 1 #"s"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 3 #"  ("
0 0 14 3 14 #"symbol->string"
0 0 24 3 2 #" ("
0 0 14 3 14 #"fsm-state-name"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 4 #"))) "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 49 #"                                                ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 14 #"fsm-state-posn"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 49 #"                                                ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 14 #"fsm-state-posn"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 49 #"                                                ("
0 0 14 3 11 #"draw-states"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 14 3 1 #"s"
0 0 24 3 7 #"))]))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 21 #"determin-input-symbol"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 8 #"cur-rule"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 15 3 4 #"case"
0 0 24 3 1 #" "
0 0 14 3 12 #"MACHINE-TYPE"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                  [("
0 0 14 3 3 #"pda"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 15 3 3 #"let"
0 0 24 3 2 #"(("
0 0 14 3 4 #"rule"
0 0 24 3 2 #" ("
0 0 14 3 14 #"world-cur-rule"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                       [("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 4 #"rule"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 3 #") ("
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                            ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 4 #"rule"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 4 #"null"
0 0 24 3 1 #" "
0 0 14 3 4 #"null"
0 0 24 3 1 #" "
0 0 14 3 4 #"null"
0 0 24 3 3 #")))"
0 0 21 3 1 #"'"
0 0 14 3 2 #"||"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 5 #"cadar"
0 0 24 3 1 #" "
0 0 14 3 4 #"rule"
0 0 24 3 5 #")]))]"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                  [("
0 0 14 3 2 #"tm"
0 0 24 3 3 #") ("
0 0 14 3 7 #"println"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"TODO\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"null"
0 0 24 3 1 #" "
0 0 14 3 8 #"cur-rule"
0 0 24 3 3 #") ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 8 #"cur-rule"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 21 3 1 #"'"
0 0 14 3 2 #"||"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 14 3 4 #"cadr"
0 0 24 3 2 #" ("
0 0 14 3 14 #"world-cur-rule"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 7 #")))])))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 17 3 38 #";; draw-inner-with-prev: none -> image"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 17 3 91
(
 #";; Purpose: Creates the inner circle that contains the arrows and th"
 #"e prevous state pointer"
) 0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 20 #"draw-inner-with-prev"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 15 3 6 #"letrec"
0 0 24 3 3 #" (("
0 0 14 3 5 #"index"
0 0 24 3 2 #" ("
0 0 14 3 15 #"get-state-index"
0 0 24 3 1 #" "
0 0 14 3 10 #"state-list"
0 0 24 3 2 #" ("
0 0 14 3 15 #"world-cur-state"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 7 #"overlay"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                  "
0 0 14 3 13 #"CENTER-CIRCLE"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 13 #"inner-circle1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 3 #"360"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 15 #"get-state-index"
0 0 24 3 1 #" "
0 0 14 3 10 #"state-list"
0 0 24 3 2 #" ("
0 0 14 3 15 #"world-cur-state"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 9 #"deg-shift"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 50 #"                                                 ("
0 0 14 3 21 #"determin-input-symbol"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 2 #" ("
0 0 14 3 14 #"world-cur-rule"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #"))) "
0 0 14 3 5 #"index"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 13 #"inner-circle2"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 3 #"360"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 15 #"get-state-index"
0 0 24 29 1 #"\n"
0 0 24 3 60
#"                                                            "
0 0 14 3 10 #"state-list"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 3 #"car"
0 0 24 3 2 #" ("
0 0 14 3 10 #"getCurRule"
0 0 24 3 2 #" ("
0 0 14 3 27 #"world-processed-config-list"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 59
#"                                                           "
0 0 14 3 9 #"deg-shift"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 14 3 7 #"inner-R"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 13 #"\"transparent\""
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 17 3 38 #";; draw-inner-with-prev: none -> image"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 17 3 61
#";; Purpose: Creates the inner circle that contains the arrows"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 18 #"draw-inner-no-prev"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 15 3 6 #"letrec"
0 0 24 3 3 #" (("
0 0 14 3 5 #"index"
0 0 24 3 2 #" ("
0 0 14 3 15 #"get-state-index"
0 0 24 3 1 #" "
0 0 14 3 10 #"state-list"
0 0 24 3 2 #" ("
0 0 14 3 15 #"world-cur-state"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 10 #"get-symbol"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 8 #"cur-rule"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                    ("
0 0 15 3 4 #"case"
0 0 24 3 1 #" "
0 0 14 3 12 #"MACHINE-TYPE"
0 0 24 29 1 #"\n"
0 0 24 3 56 #"                                                      [("
0 0 14 3 3 #"pda"
0 0 24 3 3 #") ("
0 0 14 3 7 #"println"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"TODO\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 56 #"                                                      [("
0 0 14 3 2 #"tm"
0 0 24 3 3 #") ("
0 0 14 3 7 #"println"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"TODO\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 55 #"                                                      ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 7 #"println"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"TODO\""
0 0 24 3 5 #")])))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      )"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 7 #"overlay"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                                "
0 0 14 3 13 #"CENTER-CIRCLE"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 13 #"inner-circle1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 3 #"360"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 1 #" "
0 0 14 3 9 #"deg-shift"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 21 #"determin-input-symbol"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 2 #" ("
0 0 14 3 14 #"world-cur-rule"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 14 3 5 #"index"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 14 3 7 #"inner-R"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 13 #"\"transparent\""
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 17 3 41 #";; inner-circle1: num symbol num -> image"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 17 3 99
(
 #";; Purpose: draws an arrow with the given symbol above it and then r"
 #"otates it by the given degreese"
) 0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 13 #"inner-circle1"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 3 #"deg"
0 0 24 3 1 #" "
0 0 14 3 3 #"sym"
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 17 3 15 #";;(println sym)"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 15 3 6 #"letrec"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 11 #"state-color"
0 0 24 3 2 #" ("
0 0 14 3 12 #"determin-inv"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 18 #"fsm-state-function"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 2 #" ("
0 0 14 3 18 #"machine-state-list"
0 0 24 3 2 #" ("
0 0 14 3 17 #"world-fsm-machine"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")) "
0 0 14 3 5 #"index"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 4 #"take"
0 0 24 3 2 #" ("
0 0 14 3 18 #"machine-sigma-list"
0 0 24 3 2 #" ("
0 0 14 3 17 #"world-fsm-machine"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 17 #"TAPE-INDEX-BOTTOM"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 17 #"TAPE-INDEX-BOTTOM"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 17 3 23 #";; arrow: none -> image"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 17 3 25 #";; Purpose: draws a arrow"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 5 #"arrow"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                   "
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 14 #"overlay/offset"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 14 #"symbol->string"
0 0 24 3 1 #" "
0 0 14 3 3 #"sym"
0 0 24 3 2 #") "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 14 3 12 #"beside/align"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"center\""
0 0 24 29 1 #"\n"
0 0 24 3 54 #"                                                     ("
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 7 #"inner-R"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 14 3 11 #"state-color"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 54 #"                                                     ("
0 0 14 3 6 #"rotate"
0 0 24 3 1 #" "
0 0 21 3 3 #"270"
0 0 24 3 2 #" ("
0 0 14 3 8 #"triangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 14 3 11 #"state-color"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 17 3 28 #";; down-arrow: none -> image"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 17 3 40 #";; Purpose: creates an upside-down arrow"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 10 #"down-arrow"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 14 #"overlay/offset"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                            ("
0 0 14 3 6 #"rotate"
0 0 24 3 1 #" "
0 0 21 3 3 #"180"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 14 #"symbol->string"
0 0 24 3 1 #" "
0 0 14 3 3 #"sym"
0 0 24 3 2 #") "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                            "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 21 3 3 #"-15"
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                            ("
0 0 14 3 12 #"beside/align"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"center\""
0 0 24 29 1 #"\n"
0 0 24 3 59
#"                                                          ("
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 7 #"inner-R"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 14 3 11 #"state-color"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 59
#"                                                          ("
0 0 14 3 6 #"rotate"
0 0 24 3 1 #" "
0 0 21 3 3 #"270"
0 0 24 3 2 #" ("
0 0 14 3 8 #"triangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 14 3 11 #"state-color"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 17 3 79
(
 #";; if if the rotate deg is > 90 and < 180, if so then use the upside"
 #"-down arrow"
) 0 0 24 29 1 #"\n"
0 0 24 3 30 #"                            [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 3 #"deg"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 3 #") ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 3 #"deg"
0 0 24 3 1 #" "
0 0 21 3 3 #"270"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 6 #"rotate"
0 0 24 3 1 #" "
0 0 14 3 3 #"deg"
0 0 24 3 2 #" ("
0 0 14 3 14 #"overlay/offset"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 10 #"down-arrow"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                          "
0 0 21 3 3 #"-65"
0 0 24 3 1 #" "
0 0 21 3 2 #"-8"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 14 3 7 #"inner-R"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 13 #"\"transparent\""
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 6 #"rotate"
0 0 24 3 1 #" "
0 0 14 3 3 #"deg"
0 0 24 3 2 #" ("
0 0 14 3 14 #"overlay/offset"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 5 #"arrow"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                          "
0 0 21 3 3 #"-65"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 14 3 7 #"inner-R"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 13 #"\"transparent\""
0 0 24 3 8 #")))]))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 17 3 30 #";; inner-circle2: num -> image"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 17 3 67
#";; Purpose: Draws a doted line and rotates it by the given degreese"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 13 #"inner-circle2"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"deg"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 15 3 6 #"letrec"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                            (("
0 0 14 3 8 #"dot-line"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 6 #"beside"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 4 #"line"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 7 #"inner-R"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 3 #"pen"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"gray\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"short-dash\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"butt\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"bevel\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"gray\""
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 6 #"rotate"
0 0 24 3 1 #" "
0 0 14 3 3 #"deg"
0 0 24 3 2 #" ("
0 0 14 3 13 #"overlay/align"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"center\""
0 0 24 29 1 #"\n"
0 0 24 3 54 #"                                                     ("
0 0 14 3 8 #"dot-line"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 54 #"                                                     ("
0 0 14 3 6 #"circle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 7 #"inner-R"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 13 #"\"transparent\""
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 17 3 51 #";; get-sate-index: list-of-states symbol num -> num"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 17 3 81
(
 #";; Purpose: finds the index of the given state in the list of states"
 #". Note that a"
) 0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 17 3 45 #";;     state can not be repeated in the list."
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 15 #"get-state-index"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"los"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 5 #"accum"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                            [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 2 #") "
0 0 21 3 2 #"-1"
0 0 24 3 2 #"] "
0 0 17 3 36 #";; this case should never be reached"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                            [("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"fsm-state-name"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 3 #")) "
0 0 14 3 1 #"s"
0 0 24 3 2 #") "
0 0 14 3 5 #"accum"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 15 #"get-state-index"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 2 #") "
0 0 14 3 1 #"s"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 5 #"accum"
0 0 24 3 7 #"))]))))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 46 #";; Check if the inner circle needs to be drawn"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 2 #" ("
0 0 14 3 15 #"world-cur-state"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 27 #"world-processed-config-list"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 13 #"CENTER-CIRCLE"
0 0 24 3 1 #" "
0 0 14 3 2 #"X0"
0 0 24 3 1 #" "
0 0 14 3 2 #"Y0"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 11 #"draw-states"
0 0 24 3 2 #" ("
0 0 14 3 18 #"machine-state-list"
0 0 24 3 2 #" ("
0 0 14 3 17 #"world-fsm-machine"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")) "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 17 3 35 #";; see if there is a previous state"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #" ("
0 0 14 3 27 #"world-processed-config-list"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #"))) "
0 0 17 3 28 #";; there is not a prev state"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 18 #"draw-inner-no-prev"
0 0 24 3 2 #") "
0 0 14 3 2 #"X0"
0 0 24 3 1 #" "
0 0 14 3 2 #"Y0"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 11 #"draw-states"
0 0 24 3 2 #" ("
0 0 14 3 18 #"machine-state-list"
0 0 24 3 2 #" ("
0 0 14 3 17 #"world-fsm-machine"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")) "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 17 3 24 #";; there is a prev state"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 20 #"draw-inner-with-prev"
0 0 24 3 2 #") "
0 0 14 3 2 #"X0"
0 0 24 3 1 #" "
0 0 14 3 2 #"Y0"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 11 #"draw-states"
0 0 24 3 2 #" ("
0 0 14 3 18 #"machine-state-list"
0 0 24 3 2 #" ("
0 0 14 3 17 #"world-fsm-machine"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")) "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 8 #"))])])))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; draw-world: world -> world"
0 0 24 29 1 #"\n"
0 0 17 3 56 #";; Purpose: draws the world every time on-draw is called"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"draw-world"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"letrec"
0 0 24 3 1 #"("
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 7 #"machine"
0 0 24 3 2 #" ("
0 0 14 3 17 #"world-fsm-machine"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 49 #";; draw-input-list: list-of-inputs sceen -> sceen"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 74
(
 #";; Purpose: draws every input structure from the list onto the given"
 #" sceen"
) 0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 15 #"draw-input-list"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"loi"
0 0 24 3 1 #" "
0 0 14 3 3 #"scn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                               [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 2 #") "
0 0 14 3 3 #"scn"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 12 #"draw-textbox"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 3 #") ("
0 0 14 3 15 #"draw-input-list"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 2 #") "
0 0 14 3 3 #"scn"
0 0 24 3 6 #"))])))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 51 #";; draw-button-list: list-of-buttons sceen -> sceen"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 75
(
 #";; Purpose: draws every button structure from the list onto the give"
 #"n sceen"
) 0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 16 #"draw-button-list"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"lob"
0 0 24 3 1 #" "
0 0 14 3 3 #"scn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 2 #") "
0 0 14 3 3 #"scn"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 11 #"draw-button"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 3 #") ("
0 0 14 3 16 #"draw-button-list"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 2 #") "
0 0 14 3 3 #"scn"
0 0 24 3 6 #"))])))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 43 #";; draw-error-msg: msgWindow sceen -> sceen"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 70
(
 #";; Purpose: renders the error message onto the screen if there is on"
 #"e."
) 0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 14 #"draw-error-msg"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 6 #"window"
0 0 24 3 1 #" "
0 0 14 3 3 #"scn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                              [("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 6 #"window"
0 0 24 3 2 #") "
0 0 14 3 3 #"scn"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 11 #"draw-window"
0 0 24 3 1 #" "
0 0 14 3 6 #"window"
0 0 24 3 1 #" "
0 0 14 3 3 #"scn"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 5 #")])))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 9 #"deg-shift"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 18 #"machine-state-list"
0 0 24 3 2 #" ("
0 0 14 3 17 #"world-fsm-machine"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 3 #"360"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 2 #" ("
0 0 14 3 18 #"machine-state-list"
0 0 24 3 2 #" ("
0 0 14 3 17 #"world-fsm-machine"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 5 #"get-x"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 5 #"theta"
0 0 24 3 1 #" "
0 0 14 3 3 #"rad"
0 0 24 3 3 #") ("
0 0 14 3 8 #"truncate"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 3 #"rad"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cos"
0 0 24 3 2 #" ("
0 0 14 3 16 #"degrees->radians"
0 0 24 3 1 #" "
0 0 14 3 5 #"theta"
0 0 24 3 4 #"))) "
0 0 14 3 2 #"X0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 5 #"get-y"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 5 #"theta"
0 0 24 3 1 #" "
0 0 14 3 3 #"rad"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 8 #"truncate"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 3 #"rad"
0 0 24 3 2 #" ("
0 0 14 3 3 #"sin"
0 0 24 3 2 #" ("
0 0 14 3 16 #"degrees->radians"
0 0 24 3 1 #" "
0 0 14 3 5 #"theta"
0 0 24 3 4 #"))) "
0 0 14 3 2 #"Y0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 13 #"current-index"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 2 #" ("
0 0 14 3 15 #"world-cur-state"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")) "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 8 #"index-of"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 14 #"fsm-state-name"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 4 #")) ("
0 0 14 3 18 #"machine-state-list"
0 0 24 3 2 #" ("
0 0 14 3 17 #"world-fsm-machine"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 5 #"))) ("
0 0 14 3 15 #"world-cur-state"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 5 #"tip-x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"get-x"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 9 #"deg-shift"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-index"
0 0 24 3 2 #") "
0 0 14 3 7 #"inner-R"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 5 #"tip-y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"get-y"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 9 #"deg-shift"
0 0 24 3 1 #" "
0 0 14 3 13 #"current-index"
0 0 24 3 2 #") "
0 0 14 3 7 #"inner-R"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 9 #"the-arrow"
0 0 24 3 1 #"("
0 0 14 3 6 #"rotate"
0 0 24 3 1 #" "
0 0 21 3 3 #"180"
0 0 24 3 2 #" ("
0 0 14 3 8 #"triangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"tan\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 14 #"find-state-pos"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 15 3 2 #"\316\273"
0 0 24 3 1 #"("
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 4 #"void"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 19 #"set-fsm-state-posn!"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 4 #"posn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"get-x"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 9 #"deg-shift"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 14 3 1 #"R"
0 0 24 3 3 #") ("
0 0 14 3 5 #"get-y"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 9 #"deg-shift"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 14 3 1 #"R"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 14 #"find-state-pos"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 50 #";;draw-states: list-of-states index scene -> scene"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 41 #";; Purpose: Draws the states onto the GUI"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 11 #"draw-states"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 14 #"find-state-pos"
0 0 24 3 2 #" ("
0 0 14 3 18 #"machine-state-list"
0 0 24 3 2 #" ("
0 0 14 3 17 #"world-fsm-machine"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")) "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 15 3 4 #"cond"
0 0 24 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 14 3 1 #"s"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                [("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"fsm-state-name"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 4 #")) ("
0 0 14 3 19 #"machine-start-state"
0 0 24 3 2 #" ("
0 0 14 3 17 #"world-fsm-machine"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #"("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 14 #"symbol->string"
0 0 24 3 2 #" ("
0 0 14 3 14 #"fsm-state-name"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 4 #"))) "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 14 3 17 #"START-STATE-COLOR"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 55 #"                                                      ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 14 3 17 #"START-STATE-COLOR"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                             ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 14 #"fsm-state-posn"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                             ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 14 #"fsm-state-posn"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                             ("
0 0 14 3 11 #"draw-states"
0 0 24 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 14 3 1 #"s"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                [("
0 0 14 3 5 #"ormap"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"fsm-state-name"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #")) "
0 0 14 3 1 #"x"
0 0 24 3 4 #")) ("
0 0 14 3 24 #"machine-final-state-list"
0 0 24 3 2 #" ("
0 0 14 3 17 #"world-fsm-machine"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 14 #"symbol->string"
0 0 24 3 2 #" ("
0 0 14 3 14 #"fsm-state-name"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 4 #"))) "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 56 #"                                                       ("
0 0 14 3 7 #"overlay"
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                        ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 14 3 15 #"END-STATE-COLOR"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                        ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 14 3 15 #"END-STATE-COLOR"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                              ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 14 #"fsm-state-posn"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                              ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 14 #"fsm-state-posn"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                              ("
0 0 14 3 11 #"draw-states"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 14 3 1 #"s"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 3 #"  ("
0 0 14 3 14 #"symbol->string"
0 0 24 3 2 #" ("
0 0 14 3 14 #"fsm-state-name"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 4 #"))) "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 52 #"                                                   ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 14 #"fsm-state-posn"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 52 #"                                                   ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 14 #"fsm-state-posn"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 52 #"                                                   ("
0 0 14 3 11 #"draw-states"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 14 3 1 #"s"
0 0 24 3 8 #"))])))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 2 #" ("
0 0 14 3 15 #"world-cur-state"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 14 #"draw-error-msg"
0 0 24 3 2 #" ("
0 0 14 3 15 #"world-error-msg"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #")("
0 0 14 3 13 #"draw-main-img"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 59
#"                                                          ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 16 #"create-gui-right"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 72
(
 #"                                                                    "
 #"   ("
) 0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 14 #"create-gui-top"
0 0 24 3 2 #" ("
0 0 14 3 18 #"machine-sigma-list"
0 0 24 3 2 #" ("
0 0 14 3 17 #"world-fsm-machine"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"world-cur-rule"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 3 #"TOP"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 85
(
 #"                                                                    "
 #"                ("
) 0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 17 #"create-gui-bottom"
0 0 24 3 2 #" ("
0 0 14 3 17 #"machine-rule-list"
0 0 24 3 2 #" ("
0 0 14 3 17 #"world-fsm-machine"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"world-cur-rule"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 22 #"world-scroll-bar-index"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 6 #"BOTTOM"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 98
(
 #"                                                                    "
 #"                             ("
) 0 0 14 3 16 #"draw-button-list"
0 0 24 3 2 #" ("
0 0 14 3 17 #"world-button-list"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 116
(
 #"                                                                    "
 #"                                               ("
) 0 0 14 3 15 #"draw-input-list"
0 0 24 3 2 #" ("
0 0 14 3 16 #"world-input-list"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 133
(
 #"                                                                    "
 #"                                                                ("
) 0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"machine-type"
0 0 24 3 1 #" "
0 0 14 3 7 #"machine"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 3 #"pda"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 150
(
 #"                                                                    "
 #"                                                                    "
 #"             ("
) 0 0 14 3 15 #"create-gui-left"
0 0 24 29 1 #"\n"
0 0 24 3 151
(
 #"                                                                    "
 #"                                                                    "
 #"              ("
) 0 0 14 3 18 #"machine-alpha-list"
0 0 24 3 1 #" "
0 0 14 3 7 #"machine"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 151
(
 #"                                                                    "
 #"                                                                    "
 #"              ("
) 0 0 14 3 12 #"machine-type"
0 0 24 3 1 #" "
0 0 14 3 7 #"machine"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 151
(
 #"                                                                    "
 #"                                                                    "
 #"              ("
) 0 0 14 3 28 #"pda-machine-stack-alpha-list"
0 0 24 3 2 #" ("
0 0 14 3 17 #"world-fsm-machine"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 150
(
 #"                                                                    "
 #"                                                                    "
 #"             ("
) 0 0 14 3 15 #"create-gui-left"
0 0 24 29 1 #"\n"
0 0 24 3 151
(
 #"                                                                    "
 #"                                                                    "
 #"              ("
) 0 0 14 3 18 #"machine-alpha-list"
0 0 24 3 1 #" "
0 0 14 3 7 #"machine"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 151
(
 #"                                                                    "
 #"                                                                    "
 #"              ("
) 0 0 14 3 12 #"machine-type"
0 0 24 3 1 #" "
0 0 14 3 7 #"machine"
0 0 24 3 5 #"))) ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 14 3 6 #"BOTTOM"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 10 #"MAIN-SCENE"
0 0 24 3 8 #"))))))))"
0 0 24 29 1 #"\n"
0 0 24 3 126
(
 #"                                                                    "
 #"                                                          "
) 0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 14 #"draw-error-msg"
0 0 24 3 2 #" ("
0 0 14 3 15 #"world-error-msg"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 13 #"draw-main-img"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 60
#"                                                           ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 16 #"create-gui-right"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 73
(
 #"                                                                    "
 #"    ("
) 0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 14 #"create-gui-top"
0 0 24 3 2 #" ("
0 0 14 3 18 #"machine-sigma-list"
0 0 24 3 2 #" ("
0 0 14 3 17 #"world-fsm-machine"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"world-cur-rule"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 3 #"TOP"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 86
(
 #"                                                                    "
 #"                 ("
) 0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 17 #"create-gui-bottom"
0 0 24 3 2 #" ("
0 0 14 3 17 #"machine-rule-list"
0 0 24 3 2 #" ("
0 0 14 3 17 #"world-fsm-machine"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"world-cur-rule"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 22 #"world-scroll-bar-index"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 6 #"BOTTOM"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 99
(
 #"                                                                    "
 #"                              ("
) 0 0 14 3 16 #"draw-button-list"
0 0 24 3 2 #" ("
0 0 14 3 17 #"world-button-list"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 117
(
 #"                                                                    "
 #"                                                ("
) 0 0 14 3 15 #"draw-input-list"
0 0 24 3 2 #" ("
0 0 14 3 16 #"world-input-list"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 134
(
 #"                                                                    "
 #"                                                                 ("
) 0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"machine-type"
0 0 24 3 1 #" "
0 0 14 3 7 #"machine"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 3 #"pda"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 151
(
 #"                                                                    "
 #"                                                                    "
 #"              ("
) 0 0 14 3 15 #"create-gui-left"
0 0 24 29 1 #"\n"
0 0 24 3 152
(
 #"                                                                    "
 #"                                                                    "
 #"               ("
) 0 0 14 3 18 #"machine-alpha-list"
0 0 24 3 1 #" "
0 0 14 3 7 #"machine"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 152
(
 #"                                                                    "
 #"                                                                    "
 #"               ("
) 0 0 14 3 12 #"machine-type"
0 0 24 3 1 #" "
0 0 14 3 7 #"machine"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 152
(
 #"                                                                    "
 #"                                                                    "
 #"               ("
) 0 0 14 3 28 #"pda-machine-stack-alpha-list"
0 0 24 3 2 #" ("
0 0 14 3 17 #"world-fsm-machine"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 151
(
 #"                                                                    "
 #"                                                                    "
 #"              ("
) 0 0 14 3 15 #"create-gui-left"
0 0 24 29 1 #"\n"
0 0 24 3 152
(
 #"                                                                    "
 #"                                                                    "
 #"               ("
) 0 0 14 3 18 #"machine-alpha-list"
0 0 24 3 1 #" "
0 0 14 3 7 #"machine"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 152
(
 #"                                                                    "
 #"                                                                    "
 #"               ("
) 0 0 14 3 12 #"machine-type"
0 0 24 3 1 #" "
0 0 14 3 7 #"machine"
0 0 24 3 5 #"))) ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 14 3 6 #"BOTTOM"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 10 #"MAIN-SCENE"
0 0 24 3 11 #")))))))))))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #"#"
0 0 17 3 1 #"|"
0 0 17 29 1 #"\n"
0 0 17 3 23 #"-----------------------"
0 0 17 29 1 #"\n"
0 0 17 3 17 #"TOP GUI RENDERING"
0 0 17 29 1 #"\n"
0 0 17 3 23 #"-----------------------"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; top-input-label: null -> image"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; Purpose: Creates the top left input lable"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"top-input-label"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 13 #"overlay/align"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"top\""
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 15 #"control-header3"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"Tape Input\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 2 #") "
0 0 14 3 3 #"TOP"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 13 #"\"transparent\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";; los-top-label: list-of-sigma (tape input) rule int -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; Purpose: Creates the top list of sigmas lable"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"los-top-label"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 1 #" "
0 0 14 3 8 #"cur-rule"
0 0 24 3 1 #" "
0 0 14 3 9 #"rectWidth"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"letrec"
0 0 24 3 2 #" ("
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 54 #";; list-2-img: list-of-sigma (tape input) int -> image"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 83
(
 #";; Purpose: Converts the tape input into image that overlays the tap"
 #"e in the center"
) 0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 10 #"list-2-img"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"los"
0 0 24 3 1 #" "
0 0 14 3 5 #"accum"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                           [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 2 #") "
0 0 14 3 11 #"empty-image"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                           [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 4 #")) ("
0 0 14 3 8 #"tape-box"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 2 #") "
0 0 21 3 2 #"24"
0 0 24 3 1 #" "
0 0 14 3 5 #"accum"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 6 #"beside"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 8 #"tape-box"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 2 #") "
0 0 21 3 2 #"24"
0 0 24 3 1 #" "
0 0 14 3 5 #"accum"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 10 #"list-2-img"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 3 #") ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 5 #"accum"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                            ])))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 36 #";; tape-box: string int int -> image"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 62
#";; Purpose: given a string, will overlay the text onto a image"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 8 #"tape-box"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 5 #"sigma"
0 0 24 3 1 #" "
0 0 14 3 8 #"fnt-size"
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                         "
0 0 17 3 81
(
 #";; Check if the sigmas are equal and that it is the right index in t"
 #"he tape input"
) 0 0 24 29 1 #"\n"
0 0 24 3 27 #"                         [("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 1 #" "
0 0 14 3 17 #"TAPE-INDEX-BOTTOM"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 17 3 71
(
 #";;(and (equal? sigma (cadr cur-rule)) (equal? index TAPE-INDEX-BOTTO"
 #"M))"
) 0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 7 #"overlay"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 14 #"symbol->string"
0 0 24 3 1 #" "
0 0 14 3 5 #"sigma"
0 0 24 3 2 #") "
0 0 14 3 8 #"fnt-size"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"gray\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 9 #"rectWidth"
0 0 24 3 1 #" "
0 0 14 3 3 #"TOP"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 13 #"\"transparent\""
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 7 #"overlay"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 14 #"symbol->string"
0 0 24 3 1 #" "
0 0 14 3 5 #"sigma"
0 0 24 3 2 #") "
0 0 14 3 8 #"fnt-size"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Black\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 9 #"rectWidth"
0 0 24 3 1 #" "
0 0 14 3 3 #"TOP"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 13 #"\"transparent\""
0 0 24 3 7 #"))]))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"overlay"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 3 #")) "
0 0 21 3 3 #"200"
0 0 24 3 2 #") "
0 0 14 3 3 #"TOP"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 10 #"list-2-img"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; create-gui-top: list-of-sigma rule -> image"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; Creates the top of the gui layout"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"create-gui-top"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 1 #" "
0 0 14 3 8 #"cur-rule"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 13 #"overlay/align"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"middle\""
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 6 #"beside"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 15 #"top-input-label"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 13 #"los-top-label"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 1 #" "
0 0 14 3 8 #"cur-rule"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 14 3 3 #"TOP"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 13 #"\"transparent\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#|"
0 0 17 29 1 #"\n"
0 0 17 3 23 #"-----------------------"
0 0 17 29 1 #"\n"
0 0 17 3 20 #"BOTTOM GUI RENDERING"
0 0 17 29 1 #"\n"
0 0 17 3 23 #"-----------------------"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";; create-gui-bottom: list-of-rules rule int -> image"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; Purpose: Creates the bottom of the gui layout"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"create-gui-bottom"
0 0 24 3 1 #" "
0 0 14 3 3 #"lor"
0 0 24 3 1 #" "
0 0 14 3 8 #"cur-rule"
0 0 24 3 1 #" "
0 0 14 3 12 #"scroll-index"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lor"
0 0 24 3 3 #") ("
0 0 14 3 13 #"overlay/align"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"middle\""
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 11 #"align-items"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 18 #"rules-bottom-label"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 3 #")) "
0 0 21 3 3 #"200"
0 0 24 3 2 #") "
0 0 14 3 6 #"BOTTOM"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 14 3 6 #"BOTTOM"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 13 #"\"transparent\""
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 13 #"overlay/align"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"middle\""
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 11 #"align-items"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 18 #"rules-bottom-label"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 16 #"lor-bottom-label"
0 0 24 3 1 #" "
0 0 14 3 3 #"lor"
0 0 24 3 1 #" "
0 0 21 3 2 #"83"
0 0 24 3 1 #" "
0 0 14 3 8 #"cur-rule"
0 0 24 3 1 #" "
0 0 14 3 12 #"scroll-index"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 14 3 6 #"BOTTOM"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 13 #"\"transparent\""
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; rules-bottom-label: null -> image"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";; Purpose: Creates the left bottom label in the gui"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"rules-bottom-label"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"overlay"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-upcase"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Rules:\""
0 0 24 3 2 #") "
0 0 21 3 2 #"24"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Black\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 2 #") "
0 0 14 3 6 #"BOTTOM"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; align-items image image -> image"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; Purpose: Aligns 2 images next to each other"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"align-items"
0 0 24 3 1 #" "
0 0 14 3 5 #"item1"
0 0 24 3 1 #" "
0 0 14 3 5 #"item2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"beside"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 5 #"item1"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 5 #"item2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 56 #";; lor-bottom-label: list-of-rules int rule int -> image"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; Purpose: The label for the list of rules"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"lor-bottom-label"
0 0 24 3 1 #" "
0 0 14 3 3 #"lor"
0 0 24 3 1 #" "
0 0 14 3 9 #"rectWidth"
0 0 24 3 1 #" "
0 0 14 3 8 #"cur-rule"
0 0 24 3 1 #" "
0 0 14 3 12 #"scroll-index"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"overlay"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 3 #")) "
0 0 21 3 3 #"200"
0 0 24 3 2 #") "
0 0 14 3 6 #"BOTTOM"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 7 #"overlay"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 3 #")) "
0 0 21 3 3 #"200"
0 0 24 3 2 #") "
0 0 21 3 2 #"60"
0 0 24 3 2 #") "
0 0 14 3 6 #"BOTTOM"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 13 #"\"transparent\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 11 #"ruleFactory"
0 0 24 3 2 #" ("
0 0 14 3 9 #"list-tail"
0 0 24 3 2 #" ("
0 0 14 3 7 #"reverse"
0 0 24 3 1 #" "
0 0 14 3 3 #"lor"
0 0 24 3 2 #") "
0 0 14 3 12 #"scroll-index"
0 0 24 3 2 #") "
0 0 14 3 12 #"MACHINE-TYPE"
0 0 24 3 1 #" "
0 0 14 3 12 #"scroll-index"
0 0 24 3 1 #" "
0 0 14 3 8 #"cur-rule"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; draw-verticle list int int int -> image"
0 0 24 29 1 #"\n"
0 0 17 3 97
(
 #";; Purpose: draws a list vertically, where every element in the list"
 #" is rendered below each other"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"draw-verticle"
0 0 24 3 1 #" "
0 0 14 3 3 #"loa"
0 0 24 3 1 #" "
0 0 14 3 8 #"fnt-size"
0 0 24 3 1 #" "
0 0 14 3 5 #"width"
0 0 24 3 1 #" "
0 0 14 3 6 #"height"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"letrec"
0 0 24 3 2 #" ("
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 29 #";; t-box: string int -> image"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 55 #";; Purpose: Creates a box for the sting to be placed in"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 5 #"t-box"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 8 #"a-string"
0 0 24 3 1 #" "
0 0 14 3 8 #"fnt-size"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 7 #"overlay"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 14 #"symbol->string"
0 0 24 3 1 #" "
0 0 14 3 8 #"a-string"
0 0 24 3 2 #") "
0 0 14 3 8 #"fnt-size"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Black\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 5 #"width"
0 0 24 3 1 #" "
0 0 14 3 6 #"height"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 13 #"\"transparent\""
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"loa"
0 0 24 3 3 #") ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 13 #"\"transparent\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 3 #"loa"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 5 #"t-box"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 3 #"loa"
0 0 24 3 2 #") "
0 0 14 3 8 #"fnt-size"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 5 #"above"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 5 #"t-box"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 3 #"loa"
0 0 24 3 2 #") "
0 0 14 3 8 #"fnt-size"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 13 #"draw-verticle"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 3 #"loa"
0 0 24 3 2 #") "
0 0 14 3 8 #"fnt-size"
0 0 24 3 1 #" "
0 0 14 3 5 #"width"
0 0 24 3 1 #" "
0 0 14 3 6 #"height"
0 0 24 3 6 #"))])))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#|"
0 0 17 29 1 #"\n"
0 0 17 3 23 #"-----------------------"
0 0 17 29 1 #"\n"
0 0 17 3 18 #"LEFT GUI RENDERING"
0 0 17 29 1 #"\n"
0 0 17 3 23 #"-----------------------"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #";; create-gui-left: list of alpha type list-of-gamma(optional) -> im"
 #"age"
) 0 0 24 29 1 #"\n"
0 0 17 3 61
#";; Purpose: Creates the img for the left hand side of the gui"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"create-gui-left"
0 0 24 3 1 #" "
0 0 14 3 3 #"loa"
0 0 24 3 1 #" "
0 0 14 3 4 #"type"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 14 3 3 #"log"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"letrec"
0 0 24 3 2 #" ("
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 47 #";; create-alpha-control: list of alpha -> image"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 20 #"create-alpha-control"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"loa"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 15 3 6 #"letrec"
0 0 24 3 2 #" ("
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                            ("
0 0 14 3 12 #"title1-width"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 3 #")) "
0 0 17 3 56 #";; The width of the title for all machines besides pda's"
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                            ("
0 0 14 3 12 #"title2-width"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 4 #"))) "
0 0 17 3 27 #";; The title width for pdas"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                     "
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                     "
0 0 17 3 52 #";; Determine if the gamma needs to be drawin or not."
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                       [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"log"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 13 #"overlay/align"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"top\""
0 0 24 29 1 #"\n"
0 0 24 3 56 #"                                                       ("
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 2 #"30"
0 0 24 3 2 #") "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 56 #"                                                       ("
0 0 14 3 5 #"above"
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                        ("
0 0 14 3 15 #"control-header2"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"\316\243\""
0 0 24 3 1 #" "
0 0 14 3 12 #"title1-width"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                        ("
0 0 14 3 13 #"draw-verticle"
0 0 24 3 1 #" "
0 0 14 3 3 #"loa"
0 0 24 3 1 #" "
0 0 21 3 2 #"14"
0 0 24 3 1 #" "
0 0 14 3 12 #"title1-width"
0 0 24 3 1 #" "
0 0 21 3 2 #"14"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 13 #"overlay/align"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"top\""
0 0 24 29 1 #"\n"
0 0 24 3 56 #"                                                       ("
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 2 #"30"
0 0 24 3 2 #") "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 56 #"                                                       ("
0 0 14 3 12 #"beside/align"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"top\""
0 0 24 29 1 #"\n"
0 0 24 3 70
(
 #"                                                                    "
 #" ("
) 0 0 14 3 5 #"above"
0 0 24 29 1 #"\n"
0 0 24 3 71
(
 #"                                                                    "
 #"  ("
) 0 0 14 3 15 #"control-header2"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"\316\243\""
0 0 24 3 1 #" "
0 0 14 3 12 #"title2-width"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 71
(
 #"                                                                    "
 #"  ("
) 0 0 14 3 13 #"draw-verticle"
0 0 24 3 1 #" "
0 0 14 3 3 #"loa"
0 0 24 3 1 #" "
0 0 21 3 2 #"14"
0 0 24 3 1 #" "
0 0 14 3 12 #"title2-width"
0 0 24 3 1 #" "
0 0 21 3 2 #"14"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 70
(
 #"                                                                    "
 #" ("
) 0 0 14 3 5 #"above"
0 0 24 29 1 #"\n"
0 0 24 3 71
(
 #"                                                                    "
 #"  ("
) 0 0 14 3 15 #"control-header2"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"\316\223\""
0 0 24 3 1 #" "
0 0 14 3 12 #"title2-width"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 71
(
 #"                                                                    "
 #"  ("
) 0 0 14 3 13 #"draw-verticle"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 3 #"log"
0 0 24 3 2 #") "
0 0 21 3 2 #"14"
0 0 24 3 1 #" "
0 0 14 3 12 #"title2-width"
0 0 24 3 1 #" "
0 0 21 3 2 #"14"
0 0 24 3 10 #"))))])))))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 13 #"overlay/align"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"bottom\""
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 14 3 6 #"BOTTOM"
0 0 24 3 2 #") "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 20 #"create-alpha-control"
0 0 24 3 1 #" "
0 0 14 3 3 #"loa"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#|"
0 0 17 29 1 #"\n"
0 0 17 3 23 #"-----------------------"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"RIGHT GUI RENDERING"
0 0 17 29 1 #"\n"
0 0 17 3 23 #"-----------------------"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; create-gui-right: none -> image"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";; Purpose: creates the left conrol panel for the "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"create-gui-right"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"letrec"
0 0 24 3 2 #" ("
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 37 #";; state-right-control: null -> image"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 43 #";; Purpose: Creates the state control panel"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 19 #"state-right-control"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 13 #"overlay/align"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"top\""
0 0 24 29 1 #"\n"
0 0 24 3 50 #"                                                 ("
0 0 14 3 14 #"control-header"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"State Options\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 50 #"                                                 ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 14 3 13 #"CONTROL-BOX-H"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 37 #";; sigma-right-control: none -> image"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 43 #";; Purpose: Creates the alpha control panel"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 19 #"sigma-right-control"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                  "
0 0 17 3 28 #";; render the proper display"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                    [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 12 #"MACHINE-TYPE"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"pda"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 15 3 6 #"letrec"
0 0 24 3 2 #" ("
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                              "
0 0 17 3 25 #";; draw-left: none -> img"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                              "
0 0 17 3 38 #";; Purpose: Draws the alpha add option"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                              ("
0 0 14 3 9 #"draw-left"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 60
#"                                                           ("
0 0 14 3 13 #"overlay/align"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"top\""
0 0 24 29 1 #"\n"
0 0 24 3 75
(
 #"                                                                    "
 #"      ("
) 0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 13 #"CONTROL-BOX-H"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 13 #"\"transparent\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 75
(
 #"                                                                    "
 #"      ("
) 0 0 14 3 15 #"control-header4"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Alpha\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                              "
0 0 17 3 26 #";; draw-right: none -> img"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                              "
0 0 17 3 39 #";; Purpose: Draws the Gamma add options"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                              ("
0 0 14 3 10 #"draw-right"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 13 #"overlay/align"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"top\""
0 0 24 29 1 #"\n"
0 0 24 3 76
(
 #"                                                                    "
 #"       ("
) 0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 13 #"CONTROL-BOX-H"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 76
(
 #"                                                                    "
 #"       ("
) 0 0 14 3 15 #"control-header4"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Gamma\""
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 14 3 7 #"overlay"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 6 #"beside"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 9 #"draw-left"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 10 #"draw-right"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 14 3 13 #"CONTROL-BOX-H"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 13 #"overlay/align"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"top\""
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                    ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 14 3 13 #"CONTROL-BOX-H"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                    ("
0 0 14 3 14 #"control-header"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"Alpha Options\""
0 0 24 3 6 #"))])))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 37 #";; start-right-control: none -> image"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 43 #";; Purpose: Creates the start control panel"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 19 #"start-right-control"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 13 #"overlay/align"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"top\""
0 0 24 29 1 #"\n"
0 0 24 3 50 #"                                                 ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 14 3 13 #"CONTROL-BOX-H"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 50 #"                                                 ("
0 0 14 3 14 #"control-header"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"Start State\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 35 #";; end-right-control: none -> image"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 41 #";; Purpose: Creates the end control panel"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 17 #"end-right-control"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 13 #"overlay/align"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"top\""
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 14 3 13 #"CONTROL-BOX-H"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 14 #"control-header"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"End State\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 36 #";; rule-right-control: none -> image"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 42 #";; Purpose: Creates the rule control panel"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 18 #"rule-right-control"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 13 #"overlay/align"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"top\""
0 0 24 29 1 #"\n"
0 0 24 3 49 #"                                                ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 14 3 13 #"CONTROL-BOX-H"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 49 #"                                                ("
0 0 14 3 14 #"control-header"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"Add Rules\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 9 #"test-list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 33 #";; pda-stack: stack-list -> image"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 52 #";; Purpose: creates the control stack image for pdas"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 9 #"pda-stack"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 10 #"stack-list"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 13 #"overlay/align"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"middle\""
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 14 3 11 #"above/align"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                    ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 11 #"STACK-WIDTH"
0 0 24 3 1 #" "
0 0 14 3 3 #"TOP"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 13 #"\"transparent\""
0 0 24 3 2 #") "
0 0 17 3 10 #";; The top"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                    ("
0 0 14 3 7 #"overlay"
0 0 24 3 1 #" "
0 0 17 3 56 #";; This overlays the stack inside the scroll bar buttons"
0 0 24 29 1 #"\n"
0 0 24 3 54 #"                                                     ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 11 #"STACK-WIDTH"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 6 #"BOTTOM"
0 0 24 3 1 #" "
0 0 14 3 3 #"TOP"
0 0 24 3 3 #")) "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 13 #"\"transparent\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 54 #"                                                     ("
0 0 14 3 18 #"pda-populate-stack"
0 0 24 3 1 #" "
0 0 14 3 10 #"stack-list"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                    ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 11 #"STACK-WIDTH"
0 0 24 3 1 #" "
0 0 14 3 6 #"BOTTOM"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"outline"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 19 3 12 #"\"transparent"
0 0 19 3 1 #"\""
0 0 24 3 3 #")) "
0 0 17 3 13 #";; the bottom"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 11 #"STACK-WIDTH"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"outline"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 19 3 12 #"\"transparent"
0 0 19 3 1 #"\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 36 #";; pda-populate-stack: list -> image"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 77
(
 #";; Purpose: Converts the pda stack into an image to be rendered on t"
 #"he screen"
) 0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 18 #"pda-populate-stack"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 7 #"overlay"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 13 #"draw-verticle"
0 0 24 3 1 #" "
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 2 #"14"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 2 #"29"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 11 #"STACK-WIDTH"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 6 #"BOTTOM"
0 0 24 3 1 #" "
0 0 14 3 3 #"TOP"
0 0 24 3 3 #")) "
0 0 21 3 2 #"50"
0 0 24 3 2 #") "
0 0 19 3 8 #"\"outline"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 33 #";; construct-image: none -> image"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 63
#";;; Purpose: Builds the propper image based on the machine type"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 15 #"construct-image"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 10 #"full-width"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 14 3 11 #"STACK-WIDTH"
0 0 24 3 3 #")) "
0 0 17 3 35 #";; the width of the combined images"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 17 3 63
#";; The right control block that deals with machine minipulation"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 7 #"control"
0 0 24 3 2 #" ("
0 0 14 3 13 #"overlay/align"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"left"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"top"
0 0 19 3 1 #"\""
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 11 #"above/align"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"left"
0 0 19 3 1 #"\""
0 0 24 29 1 #"\n"
0 0 24 3 74
(
 #"                                                                    "
 #"     ("
) 0 0 14 3 19 #"state-right-control"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 74
(
 #"                                                                    "
 #"     ("
) 0 0 14 3 19 #"sigma-right-control"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 74
(
 #"                                                                    "
 #"     ("
) 0 0 14 3 19 #"start-right-control"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 74
(
 #"                                                                    "
 #"     ("
) 0 0 14 3 17 #"end-right-control"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 74
(
 #"                                                                    "
 #"     ("
) 0 0 14 3 18 #"rule-right-control"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"outline"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"gray"
0 0 19 3 1 #"\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 15 3 4 #"case"
0 0 24 3 1 #" "
0 0 14 3 12 #"MACHINE-TYPE"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                  [("
0 0 14 3 3 #"pda"
0 0 24 3 3 #") ("
0 0 14 3 13 #"overlay/align"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"left"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"top"
0 0 19 3 1 #"\""
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                        ("
0 0 14 3 12 #"beside/align"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"top"
0 0 19 3 1 #"\""
0 0 24 29 1 #"\n"
0 0 24 3 71
(
 #"                                                                    "
 #"  ("
) 0 0 14 3 9 #"pda-stack"
0 0 24 3 1 #" "
0 0 14 3 10 #"STACK-LIST"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 70
(
 #"                                                                    "
 #"  "
) 0 0 14 3 7 #"control"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                        ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 10 #"full-width"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"outline"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 19 3 12 #"\"transparent"
0 0 19 3 1 #"\""
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 7 #"control"
0 0 24 3 6 #"])))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 15 #"construct-image"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#|"
0 0 17 29 1 #"\n"
0 0 17 3 29 #"-----------------------------"
0 0 17 29 1 #"\n"
0 0 17 3 25 #"ADDITIONAL DRAW FUNCTIONS"
0 0 17 29 1 #"\n"
0 0 17 3 29 #"-----------------------------"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; control-header: string -> image"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";; Purpose: Creates a header label for right control panel"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"control-header"
0 0 24 3 1 #" "
0 0 14 3 3 #"msg"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"overlay"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-upcase"
0 0 24 3 1 #" "
0 0 14 3 3 #"msg"
0 0 24 3 2 #") "
0 0 21 3 2 #"14"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"Black"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"outline"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 19 3 12 #"\"transparent"
0 0 19 3 1 #"\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; control-header2: string int int -> image"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";; Purpose: Creates a header label that is for the left gui panel"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"control-header2"
0 0 24 3 1 #" "
0 0 14 3 3 #"msg"
0 0 24 3 1 #" "
0 0 14 3 5 #"width"
0 0 24 3 1 #" "
0 0 14 3 8 #"ftn-size"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"overlay"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-upcase"
0 0 24 3 1 #" "
0 0 14 3 3 #"msg"
0 0 24 3 2 #") "
0 0 14 3 8 #"ftn-size"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"Black"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 5 #"width"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"outline"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 19 3 12 #"\"transparent"
0 0 19 3 1 #"\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"control-header3"
0 0 24 3 1 #" "
0 0 14 3 3 #"msg"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"overlay"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-upcase"
0 0 24 3 1 #" "
0 0 14 3 3 #"msg"
0 0 24 3 2 #") "
0 0 21 3 2 #"14"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"Black"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 2 #") "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"outline"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 19 3 12 #"\"transparent"
0 0 19 3 1 #"\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"control-header4"
0 0 24 3 1 #" "
0 0 14 3 3 #"msg"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"overlay"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-upcase"
0 0 24 3 1 #" "
0 0 14 3 3 #"msg"
0 0 24 3 2 #") "
0 0 21 3 2 #"14"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"Black"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"outline"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 19 3 12 #"\"transparent"
0 0 19 3 1 #"\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";; scale-text-to-image image image integer (between 0 and 1) -> imag"
 #"e"
) 0 0 24 29 1 #"\n"
0 0 17 3 90
(
 #";; Purpose: Scales the text of an image to not be larger then the im"
 #"age it is overlayed on"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"scale-text-to-image"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 3 #"img"
0 0 24 3 1 #" "
0 0 14 3 2 #"sc"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 8 #"newScale"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 2 #"sc"
0 0 24 3 1 #" "
0 0 21 3 2 #".2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 3 #") ("
0 0 14 3 11 #"image-width"
0 0 24 3 1 #" "
0 0 14 3 3 #"img"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 19 #"scale-text-to-image"
0 0 24 3 2 #" ("
0 0 14 3 5 #"scale"
0 0 24 3 1 #" "
0 0 14 3 8 #"newScale"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 2 #") "
0 0 14 3 3 #"img"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 5 #"scale"
0 0 24 3 1 #" "
0 0 14 3 2 #"sc"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 2 #") "
0 0 14 3 3 #"img"
0 0 24 3 5 #")])))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 1 #"#"
0 0 17 3 1 #"|"
0 0 17 29 1 #"\n"
0 0 17 3 18 #"------------------"
0 0 17 29 1 #"\n"
0 0 17 3 14 #"EVENT HANDLERS"
0 0 17 29 1 #"\n"
0 0 17 3 18 #"------------------"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";; process-mouse-event: world integer integer string --> world"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; Purpose: processes a users mouse event"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"process-mouse-event"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 2 #"me"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"letrec"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 78
(
 #";; Check-and-set: list-of-input-fields mouse-x mouse-y -> list-of-in"
 #"put-fields"
) 0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 98
(
 #";; Purpose: sets the input fields to active or inactive depending on"
 #" where the mouse click happens"
) 0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 13 #"check-and-set"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"loi"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                          [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"()]"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                          [("
0 0 14 3 16 #"textbox-pressed?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                             [("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"textbox-active"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 3 #")) "
0 0 21 3 2 #"#t"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 3 #") ("
0 0 14 3 13 #"check-and-set"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 2 #") "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 10 #"set-active"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 4 #")) ("
0 0 14 3 13 #"check-and-set"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 2 #") "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 5 #"))])]"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                             [("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"textbox-active"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 3 #")) "
0 0 21 3 2 #"#t"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 12 #"set-inactive"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 4 #")) ("
0 0 14 3 13 #"check-and-set"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 2 #") "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 3 #") ("
0 0 14 3 13 #"check-and-set"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 2 #") "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 8 #"))])])))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 17 3 63
#";; check-button-list: list-of-buttons mouse-x mosue-y -> button"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 17 3 114
(
 #";; Purpose: Iterates over a list of buttons and checks if one was pr"
 #"essed. If so then returns the button otherwise"
) 0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 17 3 19 #";; it returns null."
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 17 #"check-button-list"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"lob"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                              [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 2 #") "
0 0 14 3 4 #"null"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                              [("
0 0 14 3 15 #"button-pressed?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 4 #")) ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 17 #"check-button-list"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 2 #") "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 5 #")])))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 17 3 73
(
 #";; active-button-list: list-of-buttons mouse-x mouse-y -> list-of-bu"
 #"ttons"
) 0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 17 3 81
(
 #";; Purpose: Creates a new list of buttons where the click button is "
 #"set to active"
) 0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 18 #"active-button-list"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"lob"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                               [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"()]"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                               [("
0 0 14 3 15 #"button-pressed?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 17 #"set-active-button"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 4 #")) ("
0 0 14 3 18 #"active-button-list"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 2 #") "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 3 #") ("
0 0 14 3 18 #"active-button-list"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 2 #") "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 6 #"))])))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 17 3 69
(
 #";; checkButtonStates: list-of-states mouse-x mouse-y -> null or stat"
 #"e"
) 0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 17 3 57 #";; Purpose: Returns the state that was pressed on the GUI"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 17 #"checkButtonStates"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"los"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                              [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 2 #") "
0 0 14 3 4 #"null"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                              [("
0 0 14 3 18 #"fsm-state-pressed?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 4 #")) ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 17 #"checkButtonStates"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 3 #"los"
0 0 24 3 2 #") "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 6 #")]))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"me"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"button-down"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 17 3 81
(
 #";; See if there is an error to be displayed. If so disable all butto"
 #"ns and inputs"
) 0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 2 #" ("
0 0 14 3 15 #"world-error-msg"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"exit-pressed?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #" ("
0 0 14 3 15 #"world-error-msg"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 2 #") "
0 0 21 3 2 #"#t"
0 0 24 3 3 #") ("
0 0 14 3 5 #"world"
0 0 24 3 2 #" ("
0 0 14 3 17 #"world-fsm-machine"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 19 #"world-tape-position"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 14 #"world-cur-rule"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 86
(
 #"                                                                    "
 #"                 ("
) 0 0 14 3 15 #"world-cur-state"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 17 #"world-button-list"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 16 #"world-input-list"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 86
(
 #"                                                                    "
 #"                 ("
) 0 0 14 3 27 #"world-processed-config-list"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 29 #"world-unporcessed-config-list"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 14 3 4 #"null"
0 0 24 29 1 #"\n"
0 0 24 3 86
(
 #"                                                                    "
 #"                 ("
) 0 0 14 3 22 #"world-scroll-bar-index"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 12 #"redraw-world"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")])]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 17 3 31 #";; Check if a state was pressed"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 2 #" ("
0 0 14 3 17 #"checkButtonStates"
0 0 24 3 2 #" ("
0 0 14 3 18 #"machine-state-list"
0 0 24 3 2 #" ("
0 0 14 3 17 #"world-fsm-machine"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")) "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 7 #"println"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 13 #"string-append"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 19 3 1 #"\""
0 0 19 3 7 #"State: "
0 0 19 3 1 #"\""
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 14 #"symbol->string"
0 0 24 3 2 #" ("
0 0 14 3 14 #"fsm-state-name"
0 0 24 3 2 #" ("
0 0 14 3 17 #"checkButtonStates"
0 0 24 3 2 #" ("
0 0 14 3 18 #"machine-state-list"
0 0 24 3 2 #" ("
0 0 14 3 17 #"world-fsm-machine"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")) "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 19 3 1 #"\""
0 0 19 3 1 #" "
0 0 19 3 3 #"was"
0 0 19 3 8 #" pressed"
0 0 19 3 1 #"\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 12 #"redraw-world"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 17 3 41 #";; Check if a button or input was pressed"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"buttonPressed"
0 0 24 3 2 #" ("
0 0 14 3 17 #"check-button-list"
0 0 24 3 2 #" ("
0 0 14 3 17 #"world-button-list"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                   [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 13 #"buttonPressed"
0 0 24 3 4 #")) ("
0 0 14 3 12 #"run-function"
0 0 24 3 1 #" "
0 0 14 3 13 #"buttonPressed"
0 0 24 3 2 #" ("
0 0 14 3 23 #"create-new-world-button"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #" ("
0 0 14 3 18 #"active-button-list"
0 0 24 3 2 #" ("
0 0 14 3 17 #"world-button-list"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 22 #"create-new-world-input"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #" ("
0 0 14 3 13 #"check-and-set"
0 0 24 3 2 #" ("
0 0 14 3 16 #"world-input-list"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 8 #"))]))])]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"me"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"button-up"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 23 #"create-new-world-button"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 19 #"set-inactive-button"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 4 #")) ("
0 0 14 3 17 #"world-button-list"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 12 #"redraw-world"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 5 #")])))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; process-key: world key-> world"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; Purpose: processes a key users key event"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"process-key"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"letrec"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 13 #"check-and-add"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"loi"
0 0 24 3 1 #" "
0 0 14 3 6 #"action"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                          [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"()]"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                          [("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"textbox-active"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 3 #")) "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                             [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"action"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 8 #"add-text"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 2 #") "
0 0 14 3 1 #"k"
0 0 24 3 3 #") ("
0 0 14 3 13 #"check-and-add"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 2 #") "
0 0 14 3 6 #"action"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 11 #"remove-text"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 13 #"check-and-add"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 2 #") "
0 0 14 3 6 #"action"
0 0 24 3 5 #"))])]"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 3 #") ("
0 0 14 3 13 #"check-and-add"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 2 #") "
0 0 14 3 6 #"action"
0 0 24 3 7 #"))]))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 4 #")) ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"-"
0 0 19 3 1 #"\""
0 0 24 3 3 #") ("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #" "
0 0 19 3 2 #"\" "
0 0 19 3 1 #"\""
0 0 24 3 3 #"))("
0 0 14 3 9 #"string<=?"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"a"
0 0 19 3 1 #"\""
0 0 24 3 2 #" ("
0 0 14 3 15 #"string-downcase"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 2 #") "
0 0 19 3 2 #"\"z"
0 0 19 3 1 #"\""
0 0 24 3 3 #") ("
0 0 14 3 9 #"string<=?"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"1"
0 0 19 3 1 #"\""
0 0 24 3 2 #" ("
0 0 14 3 15 #"string-downcase"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 2 #") "
0 0 19 3 2 #"\"9"
0 0 19 3 1 #"\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 22 #"create-new-world-input"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #" ("
0 0 14 3 13 #"check-and-add"
0 0 24 3 2 #" ("
0 0 14 3 16 #"world-input-list"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 21 3 2 #"#t"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"\\b"
0 0 19 3 1 #"\""
0 0 24 3 3 #") ("
0 0 14 3 22 #"create-new-world-input"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #" ("
0 0 14 3 13 #"check-and-add"
0 0 24 3 2 #" ("
0 0 14 3 16 #"world-input-list"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #"])))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; SHHHH you found the easteregg"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"marco"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"println"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 4 #"Just"
0 0 19 3 1 #" "
0 0 19 3 1 #"a"
0 0 19 3 1 #" "
0 0 19 3 10 #"functional"
0 0 19 3 1 #" "
0 0 19 3 3 #"guy"
0 0 19 3 1 #" "
0 0 19 3 6 #"living"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 2 #"an"
0 0 19 3 1 #" "
0 0 19 3 10 #"imperative"
0 0 19 3 1 #" "
0 0 19 3 6 #"world\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0           0
